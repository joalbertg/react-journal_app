{"version":3,"sources":["types/types.js","actions/ui.js","firebase/firebase-config.js","actions/auth.js","helpers/loadNotes.js","helpers/fileUpload.js","actions/notes.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/NothingSelected.js","components/notes/NotesAppBar.js","hooks/useForm.js","components/notes/NotesScreen.js","components/journal/JournalScreen.js","routers/AppRouter.js","routers/PrivateRoute.js","routers/PublicRoute.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","reducers/uiReducer.js","reducers/notesReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["types","setError","err","type","payload","removeError","finishLoading","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","startLoginEmailPassword","email","password","dispatch","signInWithEmailAndPassword","then","user","uid","displayName","login","catch","error","Swal","fire","message","setCurrentUser","logout","loadNotes","a","collection","get","notesSnap","notes","forEach","snap","id","data","fileUpload","file","formData","FormData","append","fetch","method","body","resp","ok","json","activeNote","note","setNotes","startSaveNote","getState","noteToFirestore","doc","update","refreshNote","title","deleteNote","JournalEntry","date","url","noteDate","moment","useDispatch","onClick","className","style","backgroundSize","backgroundImage","format","JournalEntries","useSelector","state","indexes","Object","keys","map","index","key","Sidebar","name","signOut","newEntry","Date","getTime","add","docRef","NothingSelected","NotesAppBar","active","fileInput","useRef","ref","display","onChange","event","target","files","text","allowOutsideClick","onBeforeOpen","showLoading","secure_url","filename","original_filename","close","startUploading","current","click","useForm","initialState","useState","setState","handleInputChange","value","handleReset","newState","NoteScreen","formValues","idRef","useEffect","placeholder","autoComplete","src","alt","delete","JournalScreen","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","basename","path","component","AuthRouter","exact","to","PrivateRoute","Component","rest","props","PublicRoute","LoginScreen","ui","loading","msgError","onSubmit","preventDefault","validator","isEmail","length","disabled","signInWithPopup","RegisterScreen","password2","isFormValid","trim","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","reducers","combineReducers","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","ReduxThunk","JournalApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.af88a57e.chunk.js","sourcesContent":["export const types = {\n  LOGIN: '[AUTH] LOGIN',\n  LOGOUT: '[AUTH] LOGOUT',\n\n  UI_SET_ERROR: '[UI] UI_SET_ERROR',\n  UI_REMOVE_ERROR: '[UI] UI_REMOVE_ERROR',\n\n  UI_START_LOADING: '[UI] UI_START_LOADING',\n  UI_FINISH_LOADING: '[UI] UI_FINISH_LOADING',\n\n  NOTES_NEW_ENTRY: '[NOTES] NOTES_NEW_ENTRY',\n  NOTES_ACTIVE: '[NOTES] NOTES_ACTIVE',\n  NOTES_LOAD: '[NOTES] NOTES_LOAD',\n  NOTES_UPDATED: '[NOTES] NOTES_UPDATED',\n  NOTES_FILE_URL: '[NOTES] NOTES_FILE_URL',\n  NOTES_DELETE: '[NOTES] NOTES_DELETE',\n  NOTES_LOGOUT_CLEANING: '[NOTES] NOTES_LOGOUT_CLEANING',\n}\n\n","import { types } from '../types/types';\n\nexport const setError = err => ({\n  type: types.UI_SET_ERROR,\n  payload: err\n});\n\nexport const removeError = () => ({\n  type: types.UI_REMOVE_ERROR\n});\n\nexport const startLoading = () => ({\n  type: types.UI_START_LOADING\n});\n\nexport const finishLoading = () => ({\n  type: types.UI_FINISH_LOADING\n});\n\n","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDYFs-fFuGFXpDC3ui1C_L6ibz7EPYA4ac\",\n  authDomain: \"udemy-journal-app.firebaseapp.com\",\n  databaseURL: \"https://udemy-journal-app.firebaseio.com\",\n  projectId: \"udemy-journal-app\",\n  storageBucket: \"udemy-journal-app.appspot.com\",\n  messagingSenderId: \"436566690299\",\n  appId: \"1:436566690299:web:f25ac388ef939cd938235e\"\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nconst db = firebase.firestore();\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\n\nexport {\n  firebase,\n  db,\n  googleAuthProvider\n}\n\n","import Swal from 'sweetalert2';\n\nimport firebase, { googleAuthProvider } from '../firebase';\nimport {\n  startLoading,\n  finishLoading\n} from './ui';\nimport types from '../types';\n\nexport const startLoginEmailPassword = (email, password) => {\n  // this dispatch comes from thunk\n  return dispatch => {\n    dispatch(startLoading());\n    firebase.auth().signInWithEmailAndPassword(email, password)\n      .then(({ user: { uid, displayName } }) => {\n        dispatch(login(uid, displayName));\n        dispatch(finishLoading());\n      })\n      .catch(error => {\n        dispatch(finishLoading());\n        Swal.fire('Error', error.message, 'error');\n      });\n  }\n}\n\nexport const startRegisterWithEmailPasswordName = (email, password, name) => {\n  // this dispatch comes from thunk\n  return dispatch => {\n    firebase.auth().createUserWithEmailAndPassword(email, password)\n      .then(async ({user}) => {\n        await user.updateProfile({displayName: name});\n        dispatch(\n          login(user.uid, user.displayName)\n        );\n      })\n      .catch(error =>\n        Swal.fire('Error', error.message, 'error')\n      );\n  }\n}\n\nexport const startGoogleLogin = () => {\n  // this dispatch comes from thunk\n  return dispatch => {\n    firebase.auth().signInWithPopup(googleAuthProvider)\n      .then(({ user: { uid, displayName } }) => {\n        dispatch(login(uid, displayName ));\n      });\n  }\n}\n\nexport const login = (uid, displayName) => ({\n  type: types.LOGIN,\n  payload: { uid, displayName }\n});\n\nexport const setCurrentUser = login;\n\nexport const startLogout = () => {\n  return async dispatch => {\n    await firebase.auth().signOut();\n\n    dispatch(logout());\n  }\n}\n\nexport const logout = () => ({\n  type: types.LOGOUT\n});\n\n","import { db } from '../firebase';\n\nexport const loadNotes = async (uid) => {\n  const notesSnap = await db.collection(`${uid}/journal/notes`).get();\n  const notes = {};\n\n  notesSnap.forEach(snap => {\n    notes[snap.id] = {\n      id: snap.id,\n      ...snap.data()\n    };\n  });\n\n  return notes;\n}\n\n","export const fileUpload = async (file) => {\n  const cloudUrl = 'https://api.cloudinary.com/v1_1/dear7hmry/upload';\n  const formData = new FormData();\n\n  formData.append('file', file);\n  formData.append('upload_preset', 'react-journal');\n\n  try {\n    const resp = await fetch(cloudUrl, {\n      method: 'POST',\n      body: formData\n    });\n\n    if(resp.ok) {\n      return await resp.json();\n    } else {\n      throw await resp.json();\n    }\n  } catch(error) {\n    throw error;\n  }\n}\n\n","import Swal from 'sweetalert2';\n\nimport { db } from '../firebase';\nimport {\n  loadNotes,\n  fileUpload\n} from '../helpers';\nimport types from '../types';\n\nexport const startNewEntry = () => {\n  return async (dispatch, getState) => {\n    const { uid } = getState().auth;\n    const newEntry = {\n      title: '',\n      body: '',\n      date: new Date().getTime()\n    };\n\n    const docRef = await db.collection(`${uid}/journal/notes`).add(newEntry);\n    dispatch(activeNote(docRef.id, newEntry));\n  };\n}\n\nexport const activeNote = (id, note) => ({\n  type: types.NOTES_ACTIVE,\n  payload: { id, ...note }\n});\n\nexport const startLoadingNotes = uid => {\n  return async (dispatch) => (\n    dispatch(setNotes(await loadNotes(uid)))\n  );\n}\n\nexport const setNotes = notes => ({\n  type: types.NOTES_LOAD,\n  payload: notes\n});\n\nexport const startSaveNote = note => {\n  return async (dispatch, getState) => {\n    const { uid } = getState().auth;\n    const noteToFirestore = { ...note };\n\n    delete noteToFirestore.id;\n\n    await db.doc(`${uid}/journal/notes/${note.id}`).update(noteToFirestore);\n    dispatch(refreshNote({id: note.id, ...noteToFirestore }));\n\n    Swal.fire('Saved', note.title, 'success');\n  }\n}\n\nexport const refreshNote = note => ({\n  type: types.NOTES_UPDATED,\n  payload: note\n});\n\nexport const startUploading = file => {\n  return async (dispatch, getState) => {\n    const { active: note } = getState().notes;\n\n    Swal.fire({\n      title: 'Uploading...',\n      text: 'Please await...',\n      allowOutsideClick: false,\n      onBeforeOpen: () => {\n        Swal.showLoading();\n      }\n    });\n\n    const { secure_url: url, original_filename: filename } = await fileUpload(file);\n\n    note.url = url;\n    note.filename = filename;\n    Swal.close();\n    dispatch(startSaveNote(note));\n  }\n}\n\nexport const startDeleting = () => {\n  return async (dispatch, getState) => {\n    const { uid } = getState().auth;\n    const { id } = getState().notes.active;\n\n    await db.doc(`${uid}/journal/notes/${id}`).delete();\n\n    dispatch(deleteNote(id));\n  }\n}\n\nexport const deleteNote = id  => ({\n  type: types.NOTES_DELETE,\n  payload: { id }\n});\n\nexport const cleanNotes = () => ({\n  type: types.NOTES_LOGOUT_CLEANING\n});\n\n","import React from 'react';\nimport moment from 'moment';\nimport { useDispatch } from 'react-redux';\n\nimport { activeNote } from '../../actions';\n\nexport const JournalEntry = ({ note }) => {\n  const { id, title, body, date, url } = note;\n  const noteDate = moment(date);\n  const dispatch = useDispatch();\n\n  const handleEntryClick = () => {\n    dispatch(activeNote(id, note));\n  }\n\n  return(\n    <div\n      onClick={handleEntryClick}\n      className='journal__entry pointer animate__animated animate__fadeIn animate__faster'\n    >\n    { url &&\n        <div\n          className='journal__entry-picture'\n          style={{\n            backgroundSize: 'cover',\n            backgroundImage: `url(${url})`\n          }}\n        >\n        </div>\n    }\n      <div className='journal__entry-body'>\n        <p className='journal__entry-title'>\n          {title}\n        </p>\n        <p className='journal__entry-content'>\n          {body}\n        </p>\n      </div>\n      <div className='journal__entry-date-box'>\n        <span>{noteDate.format('dddd')}</span>\n        <h4>{noteDate.format('Do')}</h4>\n      </div>\n    </div>\n  );\n}\n\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { JournalEntry } from './JournalEntry';\n\nexport const JournalEntries = () => {\n  const { notes } = useSelector(state => state.notes);\n  const indexes = Object.keys(notes);\n\n  return(\n    <div className='journal__entries'>\n      {\n        indexes.map(index => (\n          <JournalEntry\n            key={index}\n            note={notes[index]} />\n        ))\n      }\n    </div>\n  );\n}\n\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { JournalEntries } from './JournalEntries';\nimport {\n  startLogout,\n  startNewEntry,\n  cleanNotes\n} from '../../actions';\n\nexport const Sidebar = () => {\n  const dispatch = useDispatch();\n  const { name } = useSelector(state => state.auth);\n  const handleLogout = () => {\n    dispatch(startLogout());\n    dispatch(cleanNotes());\n  }\n\n  const handleNewEntry = () => {\n    dispatch(startNewEntry());\n  }\n\n  return(\n    <aside className='journal__sidebar'>\n      <div className='journal__sidebar-navbar'>\n        <h3 className='mt-5'>\n          <i className=\"far fa-moon\"></i>\n          <span> {name}</span>\n        </h3>\n\n        <button\n          className=\"btn\"\n          onClick={handleLogout}\n        >\n          Logout\n        </button>\n      </div>\n      <div\n        onClick={handleNewEntry}\n        className=\"journal__new_entry\"\n      >\n        <i className=\"far fa-calendar-plus fa-5x\"></i>\n        <p className='mt-5'>New entry</p>\n      </div>\n      <JournalEntries />\n    </aside>\n  );\n}\n\n","import React from 'react';\n\nexport const NothingSelected = () => {\n  return(\n    <div className='nothing__main-content'>\n      <p>\n        Select something\n        <br />\n        Ipsum facere sit officiis quod?\n      </p>\n      <i className='far fa-star fa-4x mt-5'></i>\n    </div>\n  );\n}\n\n","import React, { useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport moment from 'moment';\n\nimport {\n  startSaveNote,\n  startUploading\n} from '../../actions';\n\nexport const NotesAppBar = () => {\n  const dispatch = useDispatch();\n  const { active: note } = useSelector(state => state.notes);\n  const noteDate = moment(note.date);\n  const fileInput = useRef();\n  const handleSave = () => {\n    dispatch(startSaveNote(note));\n  }\n\n  const handlePictureUpload = () => {\n    fileInput.current.click();\n  }\n\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    if(file) {\n      dispatch(startUploading(file));\n    }\n  }\n\n  return(\n    <div className='notes__appbar'>\n      <span>{noteDate.format('Do dddd yyyy')}</span>\n      <input\n        ref={fileInput}\n        type='file'\n        style={{ display: 'none' }}\n        onChange={handleFileChange}\n      />\n      <div>\n        <button\n          className='btn'\n          onClick={handlePictureUpload}\n        >\n            Picture\n        </button>\n        <button\n          onClick={handleSave}\n          className='btn'\n        >\n          Save\n        </button>\n      </div>\n    </div>\n  );\n}\n\n","import { useState } from 'react';\n\nexport const useForm = (initialState = {}) => {\n  const [state, setState] = useState(initialState);\n\n  const handleInputChange = ({ target }) => {\n    setState({ ...state, [target.name]: target.value })\n  }\n\n  const handleReset = (newState = initialState) => {\n    setState(newState);\n  }\n\n  return [state, handleInputChange, handleReset];\n}\n\n","import React, { useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { NotesAppBar } from './NotesAppBar';\nimport { useForm } from '../../hooks/useForm';\nimport { activeNote, startDeleting } from '../../actions';\n\nconst NoteScreen = () => {\n  const dispatch = useDispatch();\n  const { active: note } = useSelector(state => state.notes);\n\n  const [formValues, handleInputChange, handleReset] = useForm(note);\n  const { title, body } = formValues;\n  const idRef = useRef(note.id);\n\n  useEffect(() => {\n    if(idRef.current !== note.id) {\n      handleReset(note);\n      idRef.current = note.id;\n    }\n  }, [handleReset, note]);\n\n  useEffect(() => {\n    dispatch(activeNote(formValues.id, { ...formValues }));\n  }, [formValues, dispatch]);\n\n  const handleDelete = () => {\n    dispatch(startDeleting());\n  }\n\n  return(\n    <div className='notes__main-content'>\n      <NotesAppBar />\n      <div className='notes__content'>\n        <input\n          className='notes__title-input'\n          type='text'\n          placeholder='Some awesome title'\n          autoComplete='off'\n          name='title'\n          value={title}\n          onChange={handleInputChange}\n        />\n        <textarea\n          className='notes__textarea'\n          placeholder='What happened today'\n          name='body'\n          value={body}\n          onChange={handleInputChange}\n        ></textarea>\n        {\n          note.url &&\n            <div className='notes__image'>\n              <img\n                src={note.url}\n                alt={note.filename}\n              />\n            </div>\n        }\n      </div>\n      <button\n        className=\"btn btn-danger\"\n        onClick={handleDelete}\n      >\n        Delete\n      </button>\n    </div>\n  );\n}\n\nexport default NoteScreen;\n\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { Sidebar } from './Sidebar';\nimport { NothingSelected } from './NothingSelected';\nimport NoteScreen from '../notes';\n\nconst JournalScreen = () => {\n  const { active } = useSelector(state => state.notes);\n\n  return(\n    <div className='journal__main-content animate__animated animate__fadeIn animate__faster'>\n      <Sidebar />\n      <main>\n        {\n          active\n            ? <NoteScreen />\n            : <NothingSelected />\n        }\n      </main>\n    </div>\n  );\n}\n\nexport default JournalScreen;\n\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Redirect\n} from \"react-router-dom\";\n\nimport {\n  PrivateRoute,\n  PublicRoute,\n  AuthRouter\n} from './';\nimport JournalScreen from '../components/journal';\nimport firebase from '../firebase';\nimport {\n  setCurrentUser,\n  startLoadingNotes\n} from '../actions';\n\nconst AppRouter = () => {\n  const dispatch = useDispatch();\n  const [checking, setChecking] = useState(true);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  useEffect(() => {\n    // firebase.auth().onAuthStateChanged()\n    // this is an observable, will keep the user's data\n    // when reloading the page\n    firebase.auth().onAuthStateChanged(user => {\n      if(user?.uid) {\n        dispatch(setCurrentUser(user.uid, user.displayName));\n        dispatch(startLoadingNotes(user.uid));\n\n        setIsLoggedIn(true);\n      } else {\n        setIsLoggedIn(false);\n      }\n      setChecking(false);\n    });\n  }, [dispatch, setChecking, setIsLoggedIn]);\n\n  if(checking) {\n    return(\n      <h2>Wait...</h2>\n    );\n  }\n\n  return(\n    <Router basename={'/react-journal_app'}>\n      <div>\n        <Switch>\n          <PublicRoute\n            path='/auth'\n            isLoggedIn={isLoggedIn}\n            component={AuthRouter}\n          />\n          <PrivateRoute\n            isLoggedIn={isLoggedIn}\n            exact path='/'\n            component={JournalScreen}\n          />\n\n          <Redirect to=\"/auth/login\" />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default AppRouter;\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Route,\n  Redirect\n} from 'react-router-dom';\n\nexport const PrivateRoute = ({\n  isLoggedIn,\n  component: Component,\n  ...rest\n}) => {\n\n  return(\n    <Route\n      basename={'/react-journal_app'}\n      {...rest}\n      component={props => {\n        return isLoggedIn\n          ? <Component {...props} />\n          : <Redirect to='/auth/login' />\n      }}\n    />\n  );\n}\n\nPrivateRoute.propTypes = {\n  isLoggedIn: PropTypes.bool.isRequired,\n  component: PropTypes.func.isRequired\n}\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Route,\n  Redirect\n} from 'react-router-dom';\n\nexport const PublicRoute = ({\n  isLoggedIn,\n  component: Component,\n  ...rest\n}) => {\n\n  return(\n    <Route\n      basename={'/react-journal_app'}\n      {...rest}\n      component={props => {\n        return !isLoggedIn\n          ? <Component {...props} />\n          : <Redirect to='/' />\n      }}\n    />\n  );\n}\n\nPublicRoute.propTypes = {\n  isLoggedIn: PropTypes.bool.isRequired,\n  component: PropTypes.func.isRequired\n}\n\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport validator from 'validator';\n\nimport { useForm } from '../../hooks/useForm';\nimport {\n  startLoginEmailPassword,\n  startGoogleLogin\n} from '../../actions/auth';\nimport {\n  setError,\n  removeError\n} from '../../actions/ui';\n\nexport const LoginScreen = () => {\n  const user = {\n    email: '',\n    password: ''\n  };\n\n  const dispatch = useDispatch();\n  const { loading, msgError } = useSelector(state => state.ui);\n  const [formValues, handleInputChange, handleReset] = useForm(user);\n  const { email, password } = formValues;\n\n  const isFormValid = () => {\n    if(!validator.isEmail(email)) {\n      dispatch(setError('Email is not valid'));\n      return false;\n    } else if(password.length < 6) {\n      dispatch(setError('Password should be at least 6 characters'));\n      return false;\n    }\n\n    dispatch(removeError());\n    return true;\n  }\n\n  const handleLogin = event => {\n    event.preventDefault();\n    if(isFormValid()) {\n      dispatch(startLoginEmailPassword(email, password));\n    }\n\n    handleReset();\n  }\n\n  const handleGoogleLogin = () => {\n    dispatch(startGoogleLogin());\n  }\n\n  return(\n    <>\n      <h3 className='auth__title'>Login</h3>\n      <form\n        onSubmit={handleLogin}\n        className='animate__animated animate__fadeIn animate__faster'\n      >\n        { msgError\n            && <div className=\"auth__alert-error\">{msgError}</div>\n        }\n        <input\n          type='text'\n          placeholder='Email'\n          name='email'\n          autoComplete='off'\n          className='auth__input'\n          value={email}\n          onChange={handleInputChange}\n        />\n        <input\n          type='password'\n          placeholder='Password'\n          name='password'\n          className='auth__input'\n          value={password}\n          onChange={handleInputChange}\n        />\n        <button\n          type='submit'\n          className='btn btn-primary btn-block'\n          disabled={loading}\n        >\n          Login\n        </button>\n        <div className='auth__social-networks'>\n          <p>Login with social networks</p>\n          <div\n            onClick={handleGoogleLogin}\n            className='google-btn'\n          >\n            <div className='google-icon-wrapper'>\n              <img\n                className='google-icon'\n                src='https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg'\n                alt='google button'\n              />\n            </div>\n            <p className='btn-text'>\n              <b>Sign in with google</b>\n            </p>\n          </div>\n        </div>\n        <Link\n          to='/auth/register'\n          className='link'\n        >\n          Create new account\n        </Link>\n      </form>\n    </>\n  );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport validator from 'validator';\nimport {\n  useDispatch,\n  useSelector\n} from 'react-redux';\n\nimport { useForm } from '../../hooks/useForm';\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\nimport {\n  setError,\n  removeError\n} from '../../actions/ui';\n\nexport const RegisterScreen = () => {\n  const user = {\n    name: '',\n    email: '',\n    password: '',\n    password2: ''\n  };\n\n  const [formValues, handleInputChange, handleReset] = useForm(user);\n  const { name, email, password, password2 } = formValues;\n  const dispatch = useDispatch();\n  const { loading, msgError } = useSelector(state => state.ui);\n\n  const handleRegister = event => {\n    event.preventDefault();\n    if(isFormValid()) {\n      dispatch(startRegisterWithEmailPasswordName(email, password, name));\n    }\n\n    handleReset();\n  }\n\n  const isFormValid = () => {\n    if(name.trim().length === 0) {\n      dispatch(setError('Name is required'));\n      return false;\n    } else if(!validator.isEmail(email)) {\n      dispatch(setError('Email is not valid'));\n      return false;\n    } else if(password !== password2 || password.length < 6) {\n      dispatch(setError('Password should be at least 6 characters and match each other'));\n      return false;\n    }\n\n    dispatch(removeError());\n    return true;\n  }\n\n  return(\n    <>\n      <h3 className='auth__title'>Register</h3>\n      <form\n        onSubmit={handleRegister}\n        className='animate__animated animate__fadeIn animate__faster'\n      >\n        { msgError\n            && <div className=\"auth__alert-error\">{msgError}</div>\n        }\n        <input\n          type='text'\n          placeholder='Name'\n          name='name'\n          autoComplete='off'\n          className='auth__input'\n          value={name}\n          onChange={handleInputChange}\n        />\n        <input\n          type='text'\n          placeholder='Email'\n          name='email'\n          autoComplete='off'\n          className='auth__input'\n          value={email}\n          onChange={handleInputChange}\n        />\n        <input\n          type='password'\n          placeholder='Password'\n          name='password'\n          className='auth__input'\n          value={password}\n          onChange={handleInputChange}\n        />\n        <input\n          type='password'\n          placeholder='Confirm'\n          name='password2'\n          className='auth__input'\n          value={password2}\n          onChange={handleInputChange}\n        />\n        <button\n          type='submit'\n          className='btn btn-primary btn-block mb-5'\n          disabled={loading}\n        >\n          Register\n        </button>\n        <Link\n          to='/auth/login'\n          className='link'\n        >\n          Already register?\n        </Link>\n      </form>\n    </>\n  );\n}\n\n","import React from 'react';\nimport {\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\n\nimport {\n  LoginScreen,\n  RegisterScreen\n} from '../components/auth';\n\nexport const AuthRouter = () => {\n  return(\n    <div className=\"auth__main\">\n      <div className=\"auth__box-container\">\n        <Switch>\n          <Route path='/auth/login' component={LoginScreen} />\n          <Route path='/auth/register' component={RegisterScreen} />\n\n          <Redirect to=\"/auth/login\" />\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\n","import { types } from '../types/types';\n\nconst initialState = {\n  loading: false,\n  msgError: null\n}\n\nexport const uiReducer = (state = initialState, action) => {\n  const { type, payload } = action;\n\n  switch(type) {\n    case types.UI_SET_ERROR:\n      return {\n        ...state,\n        msgError: payload\n      };\n    case types.UI_REMOVE_ERROR:\n      return {\n        ...state,\n        msgError: null\n      };\n    case types.UI_START_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n    case types.UI_FINISH_LOADING:\n      return {\n        ...state,\n        loading: false\n      }\n    default:\n      return state;\n  }\n}\n\n","import types from '../types';\n\n/*\n *  {\n *    notes: {},\n *    active: null,\n *    active: {\n *      id: 'qwertyui1234567890',\n *      title: '',\n *      body: '',\n *      imageUrl: '',\n *      date: 123456789\n *    }\n */\n\nconst initialState = {\n  notes: [],\n  active: null\n};\n\nexport const notesReducer = (state = initialState, action) => {\n  const { type, payload } = action;\n\n  switch(type) {\n    case types.NOTES_ACTIVE:\n      let active = null;\n\n      if(state.active?.id === payload.id) {\n        active = { ...state.active, ...payload }\n      } else {\n        active = { ...payload }\n      }\n\n      return {\n        ...state,\n        active,\n        notes: { ...state.notes, [payload.id]: { ...payload } }\n      };\n    case types.NOTES_LOAD:\n      return {\n        ...state,\n        notes: { ...payload }\n      };\n    case types.NOTES_UPDATED:\n      return {\n        ...state,\n        notes: { ...state.notes, [payload.id]: { ...payload } }\n      };\n    case types.NOTES_DELETE:\n      delete state.notes[payload.id];\n      return {\n        ...state,\n        active: null\n      };\n    case types.NOTES_LOGOUT_CLEANING:\n      return {\n        notes: {},\n        active: null\n      };\n    default:\n      return state;\n  }\n}\n\n","import {\n  createStore,\n  combineReducers,\n  applyMiddleware,\n  compose\n} from 'redux';\nimport ReduxThunk from 'redux-thunk';\n\nimport {\n  authReducer,\n  uiReducer,\n  notesReducer\n} from '../reducers';\n\nconst reducers = combineReducers({\n  auth: authReducer,\n  ui: uiReducer,\n  notes: notesReducer\n});\n\n// without combineReducers\n//export const store = createStore(reducers);\n\n// without redux-thunk\n//const store = createStore(\n  //reducer, /* preloadedState, */\n  //window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n//);\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nconst store = createStore(\n  reducers, /* preloadedState, */\n  composeEnhancers(\n    applyMiddleware(ReduxThunk)\n  )\n);\n\nexport default store;\n\n","import { types } from '../types/types';\n\nexport const authReducer = (state = {}, action) => {\n  const { type, payload } = action;\n\n  switch(type) {\n    case types.LOGIN:\n      return {\n        uid: payload.uid,\n        name: payload.displayName\n      };\n    case types.LOGOUT:\n      return {};\n    default:\n      return state;\n  }\n}\n\n","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport AppRouter from './routers';\nimport store from './store';\n\nconst JournalApp = () => (\n  <Provider store={store}>\n    <AppRouter />\n  </Provider>\n);\n\nexport default JournalApp;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './JournalApp';\n\nimport './styles/styles.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}